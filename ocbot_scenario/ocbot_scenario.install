<?php
/**
 * @file
 * Install hooks for ocbot_scenario module.
 */

use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;

/**
 * Implements hook_install().
 */
function ocbot_scenario_install() {
  // Create scenario content type if not exists
  if (!\Drupal::entityTypeManager()->getStorage('node_type')->load('scenario')) {
    $type = \Drupal::entityTypeManager()->getStorage('node_type')->create([
      'type' => 'scenario',
      'name' => 'Scenario',
      'description' => 'ocBot scenario content type',
    ]);
    $type->save();
    
    // Add default fields
    _ocbot_scenario_create_default_fields();
    
    \Drupal::messenger()->addStatus(t('Scenario content type and fields created.'));
  }
}

/**
 * Creates default fields for scenario content type.
 */
function _ocbot_scenario_create_default_fields() {
  $fields = [
    'field_scenario_active' => [
      'type' => 'boolean',
      'label' => 'Active',
      'settings' => ['on_label' => 'Yes', 'off_label' => 'No'],
    ],
    'field_scenario_commands' => [
      'type' => 'text_long',
      'label' => 'Commands',
    ],
    // Додайте інші поля з вашої config/install директорії
  ];

  foreach ($fields as $field_name => $config) {
    // Create field storage
    FieldStorageConfig::create([
      'field_name' => $field_name,
      'entity_type' => 'node',
      'type' => $config['type'],
      'cardinality' => -1,
    ])->save();

    // Create field instance
    FieldConfig::create([
      'field_name' => $field_name,
      'entity_type' => 'node',
      'bundle' => 'scenario',
      'label' => $config['label'],
      'settings' => $config['settings'] ?? [],
    ])->save();
  }
}